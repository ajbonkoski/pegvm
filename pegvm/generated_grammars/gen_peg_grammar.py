from peg import *
PEG_GRAMMAR=Grammar([Rule(Name(['Grammar']), [Expression([Sequence([Prefix([Suffix([Name(['S'])])]), Prefix([Suffix([Name(['Lib']), '?'])]), Prefix([Suffix([Name(['Definition']), '+'])]), Prefix([Suffix([Name(['EOI'])])])])])], """  "Grammar([" + ", ".join([a[0] for a in arg[2]]) + "], lib_name='" + arg[1][0] + "')"   """), Rule(Name(['Lib']), [Expression([Sequence([Prefix([Suffix([Literal(['lib'])])]), Prefix([Suffix([Name(['S'])])]), Prefix([Suffix([Literal(['{'])])]), Prefix([Suffix([Name(['S'])])]), Prefix([Suffix([Expression([Sequence([Prefix([Suffix([Class([('a', 'z')])])])]), Sequence([Prefix([Suffix([Class([('A', 'Z')])])])]), Sequence([Prefix([Suffix([Literal(['_'])])])])]), '+'])]), Prefix([Suffix([Name(['S'])])]), Prefix([Suffix([Literal(['}'])])]), Prefix([Suffix([Name(['S'])])])])])], """  "".join([a[0][0] for a in arg[4]])  """), Rule(Name(['Definition']), [Expression([Sequence([Prefix([Suffix([Name(['Name'])])]), Prefix([Suffix([Name(['Arrow'])])]), Prefix([Suffix([Name(['Expression'])])]), Prefix([Suffix([Name(['Action']), '?'])]), Prefix([Suffix([Name(['S'])])])])])], """  "Rule("+ arg[0][0] + ", [" + arg[2][0] + "]" + (", "+'""'+'" '+arg[3][0]+' "'+'""' if arg[3][0] != '' else "") + ")"  """), Rule(Name(['Expression']), [Expression([Sequence([Prefix([Suffix([Name(['Sequence'])])]), Prefix([Suffix([Expression([Sequence([Prefix([Suffix([Name(['OR'])])]), Prefix([Suffix([Name(['Sequence'])])])])]), '*'])])])])], """  "Expression([" + ", ".join([arg[0][0]] + ([a[1][0] for a in arg[1]] if len(arg) > 1 else [])) + "])"  """), Rule(Name(['Sequence']), [Expression([Sequence([Prefix([Suffix([Name(['Prefix']), '+'])])])])], """  "Sequence([" + ", ".join([a[0] for a in arg[0]]) +"])"  """), Rule(Name(['Prefix']), [Expression([Sequence([Prefix([Suffix([Expression([Sequence([Prefix([Suffix([Name(['LOOKAHEAD'])])])]), Sequence([Prefix([Suffix([Name(['NOT'])])])])]), '?'])]), Prefix([Suffix([Name(['Suffix'])])])])])], """  "Prefix([" + ("'"+arg[0][0][0]+"'" + ", " + arg[1][0] if len(arg) > 1 != '' else arg[0][0]) + "])"  """), Rule(Name(['Suffix']), [Expression([Sequence([Prefix([Suffix([Name(['Primary'])])]), Prefix([Suffix([Expression([Sequence([Prefix([Suffix([Name(['OPTION'])])])]), Sequence([Prefix([Suffix([Name(['ONEORMORE'])])])]), Sequence([Prefix([Suffix([Name(['ZEROORMORE'])])])])]), '?'])]), Prefix([Suffix([Name(['S'])])])])])], """  "Suffix([" + arg[0][0] + (", '"+arg[1][0][0]+"'" if arg[1][0] != '' else '') + "])"  """), Rule(Name(['Primary']), [Expression([Sequence([Prefix([Suffix([Name(['Name'])])]), Prefix(['!', Suffix([Name(['Arrow'])])])]), Sequence([Prefix([Suffix([Name(['GroupExpr'])])])]), Sequence([Prefix([Suffix([Name(['Literal'])])])]), Sequence([Prefix([Suffix([Name(['Class'])])])]), Sequence([Prefix([Suffix([Name(['ANY'])])])])])], """  arg[0][0] if len(arg) > 1 else arg[0][0]  """), Rule(Name(['Name']), [Expression([Sequence([Prefix([Suffix([Name(['Identifier'])])]), Prefix([Suffix([Name(['S'])])])])])], """  "Name(['"+arg[0][0]+"'])"  """), Rule(Name(['GroupExpr']), [Expression([Sequence([Prefix([Suffix([Name(['OPEN'])])]), Prefix([Suffix([Name(['Expression'])])]), Prefix([Suffix([Name(['CLOSE'])])]), Prefix([Suffix([Name(['S'])])])])])], """  arg[1][0]  """), Rule(Name(['Literal']), [Expression([Sequence([Prefix([Suffix([Name(['Quote'])])]), Prefix([Suffix([Expression([Sequence([Prefix(['!', Suffix([Name(['Quote'])])]), Prefix([Suffix([Name(['Char'])])])])]), '*'])]), Prefix([Suffix([Name(['Quote'])])]), Prefix([Suffix([Name(['S'])])])]), Sequence([Prefix([Suffix([Name(['DoubleQuote'])])]), Prefix([Suffix([Expression([Sequence([Prefix(['!', Suffix([Name(['DoubleQuote'])])]), Prefix([Suffix([Name(['Char'])])])])]), '*'])]), Prefix([Suffix([Name(['DoubleQuote'])])]), Prefix([Suffix([Name(['S'])])])])])], """  "Literal([" + quot((''.join([a[1][0][0] for a in arg[1]])) if len(arg) == 4 else '') + "])"  """), Rule(Name(['Class']), [Expression([Sequence([Prefix([Suffix([Literal(['['])])]), Prefix([Suffix([Expression([Sequence([Prefix(['!', Suffix([Literal([']'])])]), Prefix([Suffix([Name(['CharRange'])])])])]), '*'])]), Prefix([Suffix([Literal([']'])])]), Prefix([Suffix([Name(['S'])])])])])], """  "Class(" + str([a[1][0] for a in arg[1]]) + ")"  """), Rule(Name(['CharRange']), [Expression([Sequence([Prefix([Suffix([Name(['Char'])])]), Prefix([Suffix([Literal(['-'])])]), Prefix([Suffix([Name(['Char'])])])]), Sequence([Prefix([Suffix([Name(['Char'])])])])])], """  arg[0] if len(arg) == 1 else (arg[0][0], arg[2][0])  """), Rule(Name(['Char']), [Expression([Sequence([Prefix([Suffix([Any([])])])])])], """  arg[0][0]  """), Rule(Name(['Action']), [Expression([Sequence([Prefix([Suffix([Literal(['{'])])]), Prefix([Suffix([Expression([Sequence([Prefix(['!', Suffix([Literal(['}'])])]), Prefix([Suffix([Any([])])])])]), '*'])]), Prefix([Suffix([Literal(['}'])])])])])], """  ''.join([a[1][0] for a in arg[1]])  """), Rule(Name(['Arrow']), [Expression([Sequence([Prefix([Suffix([Literal(['<-'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '' """), Rule(Name(['OR']), [Expression([Sequence([Prefix([Suffix([Literal(['/'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '' """), Rule(Name(['LOOKAHEAD']), [Expression([Sequence([Prefix([Suffix([Literal(['&'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '&' """), Rule(Name(['NOT']), [Expression([Sequence([Prefix([Suffix([Literal(['!'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '!' """), Rule(Name(['OPTION']), [Expression([Sequence([Prefix([Suffix([Literal(['?'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '?' """), Rule(Name(['ZEROORMORE']), [Expression([Sequence([Prefix([Suffix([Literal(['*'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '*' """), Rule(Name(['ONEORMORE']), [Expression([Sequence([Prefix([Suffix([Literal(['+'])])]), Prefix([Suffix([Name(['S'])])])])])], """ '+' """), Rule(Name(['OPEN']), [Expression([Sequence([Prefix([Suffix([Literal(['('])])]), Prefix([Suffix([Name(['S'])])])])])], """ '(' """), Rule(Name(['CLOSE']), [Expression([Sequence([Prefix([Suffix([Literal([')'])])]), Prefix([Suffix([Name(['S'])])])])])], """ ')' """), Rule(Name(['ANY']), [Expression([Sequence([Prefix([Suffix([Literal(['.'])])]), Prefix([Suffix([Name(['S'])])])])])], """ 'Any([])' """), Rule(Name(['Quote']), [Expression([Sequence([Prefix([Suffix([Literal(["'"])])])])])], """ "'" """), Rule(Name(['DoubleQuote']), [Expression([Sequence([Prefix([Suffix([Literal(['"'])])])])])], """ '"' """), Rule(Name(['BackSlash']), [Expression([Sequence([Prefix([Suffix([Literal(['\\'])])])])])], """ '\\\\' """), Rule(Name(['BackQuote']), [Expression([Sequence([Prefix([Suffix([Literal(['`'])])])])])], """ '`' """), Rule(Name(['EOL']), [Expression([Sequence([Prefix([Suffix([Literal(['\r\n'])])])]), Sequence([Prefix([Suffix([Literal(['\n'])])])]), Sequence([Prefix([Suffix([Literal(['\r'])])])])])], """ '' """), Rule(Name(['S']), [Expression([Sequence([Prefix([Suffix([Expression([Sequence([Prefix([Suffix([Literal([' '])])])]), Sequence([Prefix([Suffix([Literal(['\t'])])])]), Sequence([Prefix([Suffix([Name(['EOL'])])])])]), '*'])])])])], """ '' """), Rule(Name(['Identifier']), [Expression([Sequence([Prefix([Suffix([Class([('a', 'z'), ('A', 'Z')])])]), Prefix([Suffix([Class([('a', 'z'), ('A', 'Z'), ('0', '9')]), '*'])])])])], """  arg[0][0] + (''.join([a[0] for a in arg[1]]) if len(arg) > 1 else '')  """)])
